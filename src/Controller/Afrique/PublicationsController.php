<?php
namespace App\Controller\Afrique;

use App\Controller\AppController;
use Cake\Event\Event;
use Cake\Routing\Router;
/**
 * Publications Controller
 *
 * @property \App\Model\Table\PublicationsTable $Publications
 */
class PublicationsController extends AppController
{
    public function beforeFilter(Event $event)
    {
        parent::beforeFilter($event); // TODO: Change the autogenerated stub
        $this->Auth->allow();
    }

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {
        if($this->request->is('ajax')){
            $this->RequestHandler->renderAs($this, 'json');
            $this->response->type('application/json');
            $this->viewBuilder()->layout('ajax');

            $query = $this->Publications->find()->order(['title' => 'DESC']);
            if(count($this->request->data(['params']) != 0)){
                $params  = $this->request->data(['params']);
                $conditions = $this->Search->searchConditions($params, 'Publications');
                $datas = $this->paginate($query->where($conditions)->andWhere(['source_id' => 1]));
            }else{
                $datas = $this->paginate($query->where(['source_id' => 1]));
            }

            $this->set(compact('datas'));
            $this->set('_serialize', ['datas']);
        }else{
            $this->set('searchUrl', Router::url(['controller' => 'Publications', 'prefix' => 'afrique', '?' => ['page' => 1],]));
            $this->paginate = ['limit' => 10];
            $this->viewBuilder()->layout('afriqueCentraleLayout');
            $publications = $this->paginate($this->Publications->find()->where(['source_id' => 1]));
            $this->set(compact('publications'));
            $this->set('_serialize', ['publications']);
            $this->set('activepublication', true);
        }
    }

    /**
     * View method
     *
     * @param string|null $id Publication id.
     * @return \Cake\Network\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $publication = $this->Publications->get($id, [
            'contain' => ['Auteurs', 'Datations']
        ]);

        $this->set('publication', $publication);
        $this->set('_serialize', ['publication']);
        $this->set('activepublication', true);
        $this->viewBuilder()->layout('afriqueCentraleLayout');
    }


//    public function search(){
//        if($this->request->is('ajax')) {
//            // Force le controller à rendre une réponse JSON.
//            $this->RequestHandler->renderAs($this, 'json');
//            // Définit le type de réponse de la requete AJAX
//            $this->response->type('application/json');
//
//            $query = $this->Publications->find()->order(['title' => 'DESC']);
//
//            $params = $this->request->data('params');
//
//            $conditions = $this->Search->searchConditions($params, 'Publications');
//
//            // Find pour récupérer les sites avec le bon serveur
//            $datas = $this->paginate($query->where($conditions));
//
//            // Chargement du layout AJAX
//            $this->viewBuilder()->layout('ajax');
//
//            // Créer un contexte sites à renvoyer
//            $this->set(compact('datas'));
////            $this->set('datas', $conditions);
//
//            // Généreration des vues de données
//            $this->set('_serialize', ['datas']);
//        }
//    }

}
